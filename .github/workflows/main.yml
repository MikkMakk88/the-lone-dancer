name: Verify/lint/test Python code

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: False build
      run: echo "False build to satisfy checks"

  debug:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Show local directory
      run: |
        pwd
        ls -la .
        ls -R

  pip:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Cache pip
      uses: actions/cache@v2
      with:
        key: pip-${{ hashFiles('requirements.txt') }}
        path: |
          ~/.cache/python
          ~/.python
          ~/.pip
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install --no-deps -r requirements.txt
        pip install black pylint

  format:
    needs: pip
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        key: pip-${{ hashFiles('requirements.txt') }}
        path: |
          ~/.cache/python
          ~/.python
          ~/.pip
    - name: Install dependencies
      run: pip install --no-deps -r requirements.txt
      run: pip install black
    - name: Format with black
      run: find -name '*.py' -exec black --check {} +

  lint:
    needs: pip
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        key: pip-${{ hashFiles('requirements.txt') }}
        path: |
          ~/.cache/python
          ~/.python
          ~/.pip
    - name: Install dependencies
      run: |
        pip install --no-deps -r requirements.txt
        pip install pylint
    - name: Lint with PyLint
      run: find -name '*.py' -exec pylint {} +

  test:
    needs: pip
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Cache pip
      uses: actions/cache@v2
      with:
        key: pip-${{ hashFiles('requirements.txt') }}
        path: |
          ~/.cache/python
          ~/.python
          ~/.pip
    - name: Install dependencies
      run: pip install -r requirements.txt
    - name: Run unittests
      run: python -m unittest tests/*.py

  podman:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Create dnf cache dir
      run: mkdir -p ~/.cache/dnf/var/cache
    - name: Cache container build
      uses: actions/cache@v2
      with:
        key: container-${{ hashFiles('Containerfile') }}
        path: |
          ~/.cache/containers
          ~/.cache/dnf
          ~/.local/share/containers
    - name: Build container
      run: podman build . -t the-lone-dancer -f Containerfile -v ~/.cache/dnf/var/cache:/var/cache
    - name: Test in container
      run: podman run the-lone-dancer python3.9 -m unittest tests/*.py
